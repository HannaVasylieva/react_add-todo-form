{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","completed","title","cn","TodoList","todos","map","getNewUser","userId","usersFromServer","find","App","useState","newTitle","setNewTitle","newUserId","setNewUserId","errorTitleMessage","setErrorTitleMessage","errorUserMessage","setErrorUserMessage","newTodos","setNewTodos","action","method","onSubmit","event","preventDefault","trim","newTodo","Math","max","prevTodos","addNewTodo","htmlFor","placeholder","type","value","onChange","sanitizedTitle","target","replace","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.835c18c6.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/user';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import cn from 'classnames';\nimport { Todo } from '../../types/todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    completed,\n    user,\n    title,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={cn('TodoInfo',\n        { 'TodoInfo--completed': completed })}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { Todo } from '../../types/todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo\n          todo={todo}\n          key={todo.id}\n        />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './types/todo';\nimport { User } from './types/user';\n\nconst getNewUser = (userId: number): User | null => {\n  return usersFromServer.find(\n    user => user.id === userId,\n  ) || null;\n};\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getNewUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [newTitle, setNewTitle] = useState('');\n  const [newUserId, setNewUserId] = useState(0);\n  const [errorTitleMessage, setErrorTitleMessage] = useState(false);\n  const [errorUserMessage, setErrorUserMessage] = useState(false);\n  const [newTodos, setNewTodos] = useState(todos);\n\n  const addNewTodo = () => {\n    if (newUserId && newTitle) {\n      const newTodo = {\n        id: Math.max(...newTodos.map(todo => todo.id)) + 1,\n        userId: newUserId,\n        completed: false,\n        title: newTitle,\n        user: getNewUser(newUserId),\n      };\n\n      setNewTodos((prevTodos) => ([...prevTodos, newTodo]));\n      setNewUserId(0);\n      setNewTitle('');\n      setErrorTitleMessage(false);\n      setErrorUserMessage(false);\n    }\n\n    if (!newTitle) {\n      setErrorTitleMessage(true);\n    }\n\n    if (!newUserId) {\n      setErrorUserMessage(true);\n    }\n  };\n\n  const isSubmitted = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (newUserId && newTitle && newTitle.trim()) {\n      addNewTodo();\n    } else {\n      if (!newTitle || !newTitle.trim()) {\n        setErrorTitleMessage(true);\n      } else {\n        setErrorTitleMessage(false);\n      }\n\n      if (!newUserId) {\n        setErrorUserMessage(true);\n      } else {\n        setErrorUserMessage(false);\n      }\n    }\n  };\n\n  const handleUserSelectChange\n    = (event: React.ChangeEvent<HTMLSelectElement>) => {\n      setNewUserId(+event.target.value);\n\n      setErrorUserMessage(false);\n    };\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const sanitizedTitle\n    = event.target.value.replace(/[^A-Za-zА-Яа-я0-9\\s]/g, '');\n\n    if (!sanitizedTitle.trim()) {\n      setErrorTitleMessage(true);\n    } else {\n      setErrorTitleMessage(false);\n    }\n\n    setNewTitle(sanitizedTitle);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={isSubmitted}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"titleInput\">Title:</label>\n\n          <input\n            placeholder=\"Enter a title\"\n            type=\"text\"\n            id=\"titleInput\"\n            data-cy=\"titleInput\"\n            value={newTitle}\n            onChange={handleTitleChange}\n          />\n          {errorTitleMessage && (\n            <span className=\"error\"> Please enter a title </span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userSelect\">User:</label>\n\n          <select\n            id=\"userSelect\"\n            data-cy=\"userSelect\"\n            name=\"user\"\n            value={newUserId}\n            onChange={handleUserSelectChange}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option key={user.id} value={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n          {errorUserMessage && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={newTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}